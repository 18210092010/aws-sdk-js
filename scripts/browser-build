#!/usr/bin/env node
/**
 * Copyright 2012-2013 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You
 * may not use this file except in compliance with the License. A copy of
 * the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
 * ANY KIND, either express or implied. See the License for the specific
 * language governing permissions and limitations under the License.
 */

var browserify = require('browserify');
var coffee = require('coffee-script');
var through = require('through');
var fs = require('fs');

// not accurate, but browserify doesn't load code, it just uses the resolver
require.extensions['.coffee'] = require.extensions['.js'];

function addPaths(accumulator, paths, pwd) {
  var extMatch = /\.(js|coffee)$/;
  pwd = pwd || '';
  paths.forEach(function(path) {
    var fullPath = pwd ? [pwd, path].join('/') : path;
    if (fs.statSync(fullPath).isDirectory()) {
      addPaths(accumulator, fs.readdirSync(fullPath), fullPath);
    } else if (path.match(extMatch)) {
      accumulator.push("require './" + fullPath.replace(extMatch, '') + "'");
    }
  });
}

var files = [];
var suiteFile = '_browserify_suite.coffee';
var sdkFile = 'lib/aws.js';
var sdkDistFile = 'dist/aws-sdk.js';
var testFile = 'dist/tests.js';
var args = process.argv.slice(2);
if (args.length === 0) args = ['test'];

addPaths(files, args);
fs.writeFileSync(suiteFile, files.join('\n'));

var b = browserify(['./' + suiteFile]);

b.transform(function (file) {
  var data = '';
  var compile = function(data) { return data; }
  var write = function(buf) { data += buf; };
  var end = function() { this.queue(compile(data)); this.queue(null); };

  if (file.match(/\.coffee$/)) {
    compile = function(data) { return coffee.compile(data); };
  }

  return through(write, end);
});

console.log("Building test package (lib/tests.js)...")
b.bundle().on('end', function() {
  fs.unlinkSync(suiteFile);
}).pipe(fs.createWriteStream(testFile));

console.log("Building SDK distributable (lib/aws-sdk.js)...")
browserify(['./' + sdkFile]).bundle().pipe(fs.createWriteStream(sdkDistFile));
